State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec
    3     | decs dec

    4 dec: tydec
    5    | vardec
    6    | fundec

    7 tydec: TYPE ID EQ ty

    8 ty: ID
    9   | LBRACE tyfields RBRACE
   10   | ARRAY OF ID

   11 tyfields: /* empty */
   12         | ID COLON ID
   13         | tyfields COMMA ID COLON ID

   14 vardec: VAR ID ASSIGN exp
   15       | VAR ID COLON ID ASSIGN exp

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   18 exp: lvalue
   19    | NIL
   20    | INT
   21    | MINUS exp
   22    | STRING
   23    | LPAREN expseq RPAREN
   24    | functioncall
   25    | arithmatic
   26    | comparison
   27    | exp AND exp
   28    | exp OR exp
   29    | recordcreation
   30    | arraycreation
   31    | lvalue ASSIGN exp
   32    | IF exp THEN exp ELSE exp
   33    | IF exp THEN exp
   34    | WHILE exp DO exp
   35    | FOR ID ASSIGN exp TO exp DO exp
   36    | BREAK
   37    | LET decs IN expseq END

   38 lvalue: ID
   39       | lvalue DOT ID
   40       | lvalue LBRACK exp RBRACK
   41       | ID LBRACK exp RBRACK

   42 expseq: /* empty */
   43       | exp
   44       | expseq SEMICOLON exp

   45 functioncall: ID LPAREN explist RPAREN

   46 explist: /* empty */
   47        | exp
   48        | explist COMMA exp

   49 arithmatic: exp PLUS exp
   50           | exp MINUS exp
   51           | exp TIMES exp
   52           | exp DIVIDE exp

   53 comparison: exp EQ exp
   54           | exp NEQ exp
   55           | exp LT exp
   56           | exp LE exp
   57           | exp GT exp
   58           | exp GE exp

   59 recordcreation: ID LBRACE fieldassignmentlist RBRACE

   60 fieldassignmentlist: /* empty */
   61                    | ID EQ exp
   62                    | fieldassignmentlist COMMA ID EQ exp

   63 arraycreation: ID LBRACK exp RBRACK OF exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 10 12 13 14 15 16 17 35 38 39 41 45 59 61 62 63
STRING (259) 22
INT (260) 20
COMMA (261) 13 48 62
COLON (262) 12 13 15 17
SEMICOLON (263) 44
LPAREN (264) 16 17 23 45
RPAREN (265) 16 17 23 45
LBRACK (266) 40 41 63
RBRACK (267) 40 41 63
LBRACE (268) 9 59
RBRACE (269) 9 59
DOT (270) 39
PLUS (271) 49
MINUS (272) 21 50
TIMES (273) 51
DIVIDE (274) 52
EQ (275) 7 16 17 53 61 62
NEQ (276) 54
LT (277) 55
LE (278) 56
GT (279) 57
GE (280) 58
AND (281) 27
OR (282) 28
ASSIGN (283) 14 15 31 35
ARRAY (284) 10
IF (285) 32 33
THEN (286) 32 33
ELSE (287) 32
WHILE (288) 34
FOR (289) 35
TO (290) 35
DO (291) 34 35
LET (292) 37
IN (293) 37
END (294) 37
OF (295) 10 63
BREAK (296) 36
NIL (297) 19
FUNCTION (298) 16 17
VAR (299) 14 15
TYPE (300) 7
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 3 37
dec (50)
    on left: 4 5 6, on right: 2 3
tydec (51)
    on left: 7, on right: 4
ty (52)
    on left: 8 9 10, on right: 7
tyfields (53)
    on left: 11 12 13, on right: 9 13 16 17
vardec (54)
    on left: 14 15, on right: 5
fundec (55)
    on left: 16 17, on right: 6
exp (56)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36 37, on right: 1 14 15 16 17 21 27 28 31 32 33 34 35 40 41 43
    44 47 48 49 50 51 52 53 54 55 56 57 58 61 62 63
lvalue (57)
    on left: 38 39 40 41, on right: 18 31 39 40
expseq (58)
    on left: 42 43 44, on right: 23 37 44
functioncall (59)
    on left: 45, on right: 24
explist (60)
    on left: 46 47 48, on right: 45 48
arithmatic (61)
    on left: 49 50 51 52, on right: 25
comparison (62)
    on left: 53 54 55 56 57 58, on right: 26
recordcreation (63)
    on left: 59, on right: 29
fieldassignmentlist (64)
    on left: 60 61 62, on right: 59 62
arraycreation (65)
    on left: 63, on right: 30


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program         go to state 12
    exp             go to state 13
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 1

   38 lvalue: ID .
   41       | ID . LBRACK exp RBRACK
   45 functioncall: ID . LPAREN explist RPAREN
   59 recordcreation: ID . LBRACE fieldassignmentlist RBRACE
   63 arraycreation: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 20
    LBRACK  shift, and go to state 21
    LBRACE  shift, and go to state 22

    LBRACK    [reduce using rule 38 (lvalue)]
    $default  reduce using rule 38 (lvalue)


state 2

   22 exp: STRING .

    $default  reduce using rule 22 (exp)


state 3

   20 exp: INT .

    $default  reduce using rule 20 (exp)


state 4

   23 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp             go to state 23
    lvalue          go to state 14
    expseq          go to state 24
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 5

   21 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 25
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 6

   32 exp: IF . exp THEN exp ELSE exp
   33    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 26
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 7

   34 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 27
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 8

   35 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 28


state 9

   37 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    decs    go to state 32
    dec     go to state 33
    tydec   go to state 34
    vardec  go to state 35
    fundec  go to state 36


state 10

   36 exp: BREAK .

    $default  reduce using rule 36 (exp)


state 11

   19 exp: NIL .

    $default  reduce using rule 19 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 37


state 13

    1 program: exp .
   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


state 14

   18 exp: lvalue .
   31    | lvalue . ASSIGN exp
   39 lvalue: lvalue . DOT ID
   40       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51
    ASSIGN  shift, and go to state 52

    $default  reduce using rule 18 (exp)


state 15

   24 exp: functioncall .

    $default  reduce using rule 24 (exp)


state 16

   25 exp: arithmatic .

    $default  reduce using rule 25 (exp)


state 17

   26 exp: comparison .

    $default  reduce using rule 26 (exp)


state 18

   29 exp: recordcreation .

    $default  reduce using rule 29 (exp)


state 19

   30 exp: arraycreation .

    $default  reduce using rule 30 (exp)


state 20

   45 functioncall: ID LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 46 (explist)

    exp             go to state 53
    lvalue          go to state 14
    functioncall    go to state 15
    explist         go to state 54
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 21

   41 lvalue: ID LBRACK . exp RBRACK
   63 arraycreation: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 55
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 22

   59 recordcreation: ID LBRACE . fieldassignmentlist RBRACE

    ID  shift, and go to state 56

    $default  reduce using rule 60 (fieldassignmentlist)

    fieldassignmentlist  go to state 57


state 23

   27 exp: exp . AND exp
   28    | exp . OR exp
   43 expseq: exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 43 (expseq)


state 24

   23 exp: LPAREN expseq . RPAREN
   44 expseq: expseq . SEMICOLON exp

    SEMICOLON  shift, and go to state 58
    RPAREN     shift, and go to state 59


state 25

   21 exp: MINUS exp .
   27    | exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    $default  reduce using rule 21 (exp)


state 26

   27 exp: exp . AND exp
   28    | exp . OR exp
   32    | IF exp . THEN exp ELSE exp
   33    | IF exp . THEN exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 60


state 27

   27 exp: exp . AND exp
   28    | exp . OR exp
   34    | WHILE exp . DO exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 61


state 28

   35 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 62


state 29

   16 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 63


state 30

   14 vardec: VAR . ID ASSIGN exp
   15       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 64


state 31

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 65


state 32

    3 decs: decs . dec
   37 exp: LET decs . IN expseq END

    IN        shift, and go to state 66
    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    dec     go to state 67
    tydec   go to state 34
    vardec  go to state 35
    fundec  go to state 36


state 33

    2 decs: dec .

    $default  reduce using rule 2 (decs)


state 34

    4 dec: tydec .

    $default  reduce using rule 4 (dec)


state 35

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


state 36

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 37

    0 $accept: program $end .

    $default  accept


state 38

   49 arithmatic: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 68
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 39

   50 arithmatic: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 69
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 40

   51 arithmatic: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 70
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 41

   52 arithmatic: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 71
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 42

   53 comparison: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 72
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 43

   54 comparison: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 73
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 44

   55 comparison: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 74
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 45

   56 comparison: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 75
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 46

   57 comparison: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 76
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 47

   58 comparison: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 77
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 48

   27 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 78
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 49

   28 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 79
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 50

   40 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 80
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 51

   39 lvalue: lvalue DOT . ID

    ID  shift, and go to state 81


state 52

   31 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 82
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 53

   27 exp: exp . AND exp
   28    | exp . OR exp
   47 explist: exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 47 (explist)


state 54

   45 functioncall: ID LPAREN explist . RPAREN
   48 explist: explist . COMMA exp

    COMMA   shift, and go to state 83
    RPAREN  shift, and go to state 84


state 55

   27 exp: exp . AND exp
   28    | exp . OR exp
   41 lvalue: ID LBRACK exp . RBRACK
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp
   63 arraycreation: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 85
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


state 56

   61 fieldassignmentlist: ID . EQ exp

    EQ  shift, and go to state 86


state 57

   59 recordcreation: ID LBRACE fieldassignmentlist . RBRACE
   62 fieldassignmentlist: fieldassignmentlist . COMMA ID EQ exp

    COMMA   shift, and go to state 87
    RBRACE  shift, and go to state 88


state 58

   44 expseq: expseq SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 89
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 59

   23 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 23 (exp)


state 60

   32 exp: IF exp THEN . exp ELSE exp
   33    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 90
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 61

   34 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 91
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 62

   35 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 92
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 63

   16 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   17       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 93


state 64

   14 vardec: VAR ID . ASSIGN exp
   15       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95


state 65

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 96


state 66

   37 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 42 (expseq)

    exp             go to state 23
    lvalue          go to state 14
    expseq          go to state 97
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 67

    3 decs: decs dec .

    $default  reduce using rule 3 (decs)


state 68

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   49           | exp PLUS exp .
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 49 (arithmatic)


state 69

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   50           | exp MINUS exp .
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 50 (arithmatic)


state 70

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   51           | exp TIMES exp .
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    $default  reduce using rule 51 (arithmatic)


state 71

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   52           | exp DIVIDE exp .
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    $default  reduce using rule 52 (arithmatic)


state 72

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   53           | exp EQ exp .
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 53 (comparison)


state 73

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   54           | exp NEQ exp .
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 54 (comparison)


state 74

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   55           | exp LT exp .
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 55 (comparison)


state 75

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   56           | exp LE exp .
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 56 (comparison)


state 76

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   57           | exp GT exp .
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 57 (comparison)


state 77

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp
   58           | exp GE exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 58 (comparison)


state 78

   27 exp: exp . AND exp
   27    | exp AND exp .
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 27 (exp)


state 79

   27 exp: exp . AND exp
   28    | exp . OR exp
   28    | exp OR exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 28 (exp)


state 80

   27 exp: exp . AND exp
   28    | exp . OR exp
   40 lvalue: lvalue LBRACK exp . RBRACK
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    RBRACK  shift, and go to state 98
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


state 81

   39 lvalue: lvalue DOT ID .

    $default  reduce using rule 39 (lvalue)


state 82

   27 exp: exp . AND exp
   28    | exp . OR exp
   31    | lvalue ASSIGN exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 31 (exp)


state 83

   48 explist: explist COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 99
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 84

   45 functioncall: ID LPAREN explist RPAREN .

    $default  reduce using rule 45 (functioncall)


state 85

   41 lvalue: ID LBRACK exp RBRACK .
   63 arraycreation: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 100

    $default  reduce using rule 41 (lvalue)


state 86

   61 fieldassignmentlist: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 101
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 87

   62 fieldassignmentlist: fieldassignmentlist COMMA . ID EQ exp

    ID  shift, and go to state 102


state 88

   59 recordcreation: ID LBRACE fieldassignmentlist RBRACE .

    $default  reduce using rule 59 (recordcreation)


state 89

   27 exp: exp . AND exp
   28    | exp . OR exp
   44 expseq: expseq SEMICOLON exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 44 (expseq)


state 90

   27 exp: exp . AND exp
   28    | exp . OR exp
   32    | IF exp THEN exp . ELSE exp
   33    | IF exp THEN exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 103

    $default  reduce using rule 33 (exp)


state 91

   27 exp: exp . AND exp
   28    | exp . OR exp
   34    | WHILE exp DO exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 34 (exp)


state 92

   27 exp: exp . AND exp
   28    | exp . OR exp
   35    | FOR ID ASSIGN exp . TO exp DO exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 104


state 93

   16 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   17       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 105

    $default  reduce using rule 11 (tyfields)

    tyfields  go to state 106


state 94

   15 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 107


state 95

   14 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 108
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 96

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 109
    LBRACE  shift, and go to state 110
    ARRAY   shift, and go to state 111

    ty  go to state 112


state 97

   37 exp: LET decs IN expseq . END
   44 expseq: expseq . SEMICOLON exp

    SEMICOLON  shift, and go to state 58
    END        shift, and go to state 113


state 98

   40 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 40 (lvalue)


state 99

   27 exp: exp . AND exp
   28    | exp . OR exp
   48 explist: explist COMMA exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 48 (explist)


state 100

   63 arraycreation: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 114
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 101

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp
   61 fieldassignmentlist: ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 61 (fieldassignmentlist)


state 102

   62 fieldassignmentlist: fieldassignmentlist COMMA ID . EQ exp

    EQ  shift, and go to state 115


state 103

   32 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 116
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 104

   35 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 117
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 105

   12 tyfields: ID . COLON ID

    COLON  shift, and go to state 118


state 106

   13 tyfields: tyfields . COMMA ID COLON ID
   16 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 120


state 107

   15 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 121


state 108

   14 vardec: VAR ID ASSIGN exp .
   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 14 (vardec)


state 109

    8 ty: ID .

    $default  reduce using rule 8 (ty)


state 110

    9 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 105

    $default  reduce using rule 11 (tyfields)

    tyfields  go to state 122


state 111

   10 ty: ARRAY . OF ID

    OF  shift, and go to state 123


state 112

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


state 113

   37 exp: LET decs IN expseq END .

    $default  reduce using rule 37 (exp)


state 114

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp
   63 arraycreation: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 63 (arraycreation)


state 115

   62 fieldassignmentlist: fieldassignmentlist COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 124
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 116

   27 exp: exp . AND exp
   28    | exp . OR exp
   32    | IF exp THEN exp ELSE exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 32 (exp)


state 117

   27 exp: exp . AND exp
   28    | exp . OR exp
   35    | FOR ID ASSIGN exp TO exp . DO exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 125


state 118

   12 tyfields: ID COLON . ID

    ID  shift, and go to state 126


state 119

   13 tyfields: tyfields COMMA . ID COLON ID

    ID  shift, and go to state 127


state 120

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   17       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 128
    EQ     shift, and go to state 129


state 121

   15 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 130
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 122

    9 ty: LBRACE tyfields . RBRACE
   13 tyfields: tyfields . COMMA ID COLON ID

    COMMA   shift, and go to state 119
    RBRACE  shift, and go to state 131


state 123

   10 ty: ARRAY OF . ID

    ID  shift, and go to state 132


state 124

   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp
   62 fieldassignmentlist: fieldassignmentlist COMMA ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 62 (fieldassignmentlist)


state 125

   35 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 133
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 126

   12 tyfields: ID COLON ID .

    $default  reduce using rule 12 (tyfields)


state 127

   13 tyfields: tyfields COMMA ID . COLON ID

    COLON  shift, and go to state 134


state 128

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 135


state 129

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 136
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 130

   15 vardec: VAR ID COLON ID ASSIGN exp .
   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 15 (vardec)


state 131

    9 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 9 (ty)


state 132

   10 ty: ARRAY OF ID .

    $default  reduce using rule 10 (ty)


state 133

   27 exp: exp . AND exp
   28    | exp . OR exp
   35    | FOR ID ASSIGN exp TO exp DO exp .
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 35 (exp)


state 134

   13 tyfields: tyfields COMMA ID COLON . ID

    ID  shift, and go to state 137


state 135

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 138


state 136

   16 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 16 (fundec)


state 137

   13 tyfields: tyfields COMMA ID COLON ID .

    $default  reduce using rule 13 (tyfields)


state 138

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 139
    lvalue          go to state 14
    functioncall    go to state 15
    arithmatic      go to state 16
    comparison      go to state 17
    recordcreation  go to state 18
    arraycreation   go to state 19


state 139

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   27 exp: exp . AND exp
   28    | exp . OR exp
   49 arithmatic: exp . PLUS exp
   50           | exp . MINUS exp
   51           | exp . TIMES exp
   52           | exp . DIVIDE exp
   53 comparison: exp . EQ exp
   54           | exp . NEQ exp
   55           | exp . LT exp
   56           | exp . LE exp
   57           | exp . GT exp
   58           | exp . GE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 17 (fundec)
